rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages access to user profile documents.
     * @path /users/{userId}
     * @allow (create) Authenticated user can create their own profile with matching UID.
     * @allow (get, update, delete) Authenticated user can only access their own profile.
     * @deny (list) Listing all users is not allowed.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Manages access to payment documents.
     * @path /payments/{paymentId}
     * @allow (get, list) Authenticated users can retrieve payment data.
     * @allow (create, update, delete) No one can create, update, or delete payments through direct client access. This should be handled by backend functions.
     * @principle Payment information is read-only for clients, write operations restricted to backend.
     */
    match /payments/{paymentId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get, list: if isSignedIn();
      allow create, update, delete: if false;
    }

    /**
     * @description Manages access to meter reading documents.
     * @path /meterReadings/{readingId}
     * @allow (get, list) Authenticated users can retrieve meter reading data.
     * @allow (create, update, delete) No one can create, update, or delete meter readings through direct client access. This should be handled by backend functions.
     * @principle Meter reading information is read-only for clients, write operations restricted to backend.
     */
    match /meterReadings/{readingId} {
      function isSignedIn() {
        return request.auth != null;
      }

      allow get, list: if isSignedIn();
      allow create, update, delete: if false;
    }
  }
}